 /* | .playground
 *   | .playgroundCode
 *     | .ReactCodeMirror.playgroundStage
 *       | .CodeMirror.cm-s-elegant.CodeMirror-wrap
 *   | .playgroundPreview
 *     | div
 *       | .previewArea
 *     | div
 *       | .playgroundError
 */

.playground {
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 0;

  @media (--medium-viewport) {
    flex-direction: row;
    flex-wrap: nowrap;
  }
}

.playgroundCode {
  font-size: 14px;
  width: 100%;

  @media (--medium-viewport) {
    flex: 1 0 60%;
    font-size: 0.875rem;
  }
}

.playgroundStage {
  background-color: var(--codeMirrorbg);
  max-height: 500px;
  padding: 2rem 10%;
  overflow: auto;

  @media (--medium-viewport) {
    margin-left: -10%;
  }
}

.playgroundPreview {
  @media (--medium-viewport) {
    flex: 1 0 40%;
  }
}

.playgroundArea svg {
  margin: 0 auto;
  max-height: 320px;
}

.playgroundError {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  background-color: var(--black);
  color: var(--white);
  font-family: var(--fontMonospace);
  font-size: 0.9em;
  hyphens: none;
  line-height: 1.5;
  padding: var(--gutter);
  white-space: pre-wrap;
}

/*
 * Code Mirror Color Theme
 */
.cm-s-elegant.CodeMirror {
  height: auto;
  overflow: hidden;
  padding: 0;

  background: none !important;
  color: var(--codeMirrorPunctuation);
  font-family: var(--fontMonospace);
  font-size: 0.9em;
  font-variant-ligatures: none;
  hyphens: none;
  line-height: 1.5;
  tab-size: 2;
  text-shadow: 0 1px white;
  white-space: pre;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
}
.cm-s-elegant .CodeMirror-selected { /* text selection */
  background: var(--codeMirrorbgFocused);
  color: white;
}
.cm-s-elegant .CodeMirror-activeline {
  background: var(--codeMirrorbgFocused);
}
.cm-s-elegant .CodeMirror-activeline-background {
  background: var(--codeMirrorbgFocused);
}
.cm-s-elegant .CodeMirror-gutters {
  background: var(--codeMirrorbg) !important;
}
.cm-s-elegant .CodeMirror-foldgutter-open,
.CodeMirror-foldgutter-folded {
  color: #999;
}
.cm-s-elegant div.CodeMirror-cursor {
  border-left: 1px solid black !important;
}
.cm-s-elegant span.cm-builtin {
  color: #fff;
  text-decoration: underline;
}
.cm-s-elegant span.cm-atom {
  color: var(--codeMirrorFunction);
}
.cm-s-elegant span.cm-attribute {
  color: black;
}
.cm-s-elegant span.cm-comment {
  color: var(--codeMirrorComment);
}
.cm-s-elegant span.cm-def {
  color: black;
}
.cm-s-elegant span.cm-header {
  color: var(--codeMirrorbgFocused);
}
.cm-s-elegant span.cm-keyword {
  color: var(--codeMirrorKeyword);
}
.cm-s-elegant span.cm-meta {
  color: var(--codeMirrorbgFocused);
}
.cm-s-elegant span.cm-number {
  color: var(--codeMirrorNumber);
}
.cm-s-elegant span.cm-operater,
.cm-s-elegant span.cm-operator {
  color: var(--codeMirrorOperator);
}
.cm-s-elegant span.cm-property {
  color: var(--codeMirrorFunction);
}
.cm-s-elegant span.cm-qualifier {
  color: var(--codeMirrorFunction);
}
.cm-s-elegant span.cm-string {
  color: var(--codeMirrorSelector);
}
.cm-s-elegant span.cm-string-2 {
  color: var(--codeMirrorSelector);
}
.cm-s-elegant span.cm-tag {
  color: black;
}
.cm-s-elegant span.cm-tag.cm-bracket,
.cm-s-elegant span.cm-bracket {
  color: var(--codeMirrorPunctuation);
}
.cm-s-elegant span.cm-variable,
.cm-s-elegant span.cm-variable-2 {
  color: black;
}
.cm-s-elegant span.CodeMirror-matchingbracket {
  box-sizing: border-box;
  background: transparent;
  border-bottom: 1px solid;
}
.cm-s-elegant span.CodeMirror-nonmatchingbracket {
  border-bottom: 1px solid;
  background: none;
}
